[[_git_aliases]]
=== Mga Alyas sa Git

(((aliases)))
Bago natin tapusin ang kabanatang ito tungkol sa pangunahing kaalaman sa git, mayroon lang isang maliit na tip na para mas maging simple ang iyong karanasa sa Git, mas madali, at mas pamilyar: mga alyas.
Hindi namin babanggitin ang mga ito o magpalagay na gagamitin mo ang mga ito mamaya sa aklat na ito, ngunit dapat mong malaman kung paano gamitin ang mga ito.

Ang Git ay hindi awtomatikong magpapahayag sa iyong command kapag hindi mo itong kumpletong itina-type.
Kung hindi mo gustong i-type ang buong teksto sa bawat isa sa mga Git command, madali mo lang mai-setup ang alyas para sa bawat command sa pamamagitan ng paggamit ng `gitconfig`.(((git commands, config)))
Ito ang iilang mga halimbawa na marahil ay gusto mong i-setup:

[source,console]
----
$ git config --global alias.co checkout
$ git config --global alias.br branch
$ git config --global alias.ci commit
$ git config --global alias.st status
----

Ibig sabihin nito, halimbawa, sa halip na mag-type ng `git commit`, kailangan mo lang mag-type ng `git ci`.
Habang patuloy kang gumagamit ng Git, marahil ay parati mo ring ginagamit ang ibang mga command; kaya huwag mag-atubiling maglikha ng bagong mga alyas.

Ang pamamaraang ito ay sobrang nakakatulong sa paglikha ng mga command na naisip mo na dapat umiiral.
Halimbawa, para maitama ang problema sa paggamamit na naranasan mo sa pag-unstage ng isang file, maaari kang magdagdag ng sarili mong unstage na alyas nang Git:

[source,console]
----
$ git config --global alias.unstage 'reset HEAD --'
----

Ito ay nagpatimbang sa sumusunod na dalawang mga command:

[source,console]
----
$ git unstage fileA
$ git reset HEAD -- fileA
----

Ito ay parang mas malinaw nang kaunti.
Pangkaraniwan din ang pagdagdag ng `last` na command, gaya nito:

[source,console]
----
$ git config --global alias.last 'log -1 HEAD'
----

Sa ganitong paraan, madali mo lang makita ang huling commit:

[source,console]
----
$ git last
commit 66938dae3329c7aebe598c2246a8e6af90d04646
Author: Josh Goebel <dreamer3@example.com>
Date:   Tue Aug 26 19:48:51 2008 +0800

    test for current head

    Signed-off-by: Scott Chacon <schacon@example.com>
----

Gaya ng nakikita ninyo, ang Git ay simpleng nagpapalit lang ng bagong utos sa kung para saan talaga ang iyong alyas.
Gayunman, marahil ay gugustuhin mong magpapatakbo ng external na command, sa halip na isang Git na subcommand.
Sa kasong iyan, sisimulan mo ang command sa karakter na `!`.
Ito ay magagamit kung magsusulat ka ng iyong sariling mga kagamitan na gagana sa Git na repository.
Maaari nating ipakita sa pamamagitan ng pag-alyas sa `git visual` na mapapatakbo ng `gitk`:

[source,console]
----
$ git config --global alias.visual '!gitk'
----
